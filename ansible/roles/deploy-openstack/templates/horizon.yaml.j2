---
{% if openstack.release == "stein" and commercial.enabled != true  %}
images:
  tags:
    horizon: {{global.registry}}/vanillastack/horizon:ubuntu-bionic-20200903
    horizon_db_sync: {{global.registry}}/vanillastack/horizon:ubuntu-bionic-20200903
    db_init: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    db_drop: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    test: docker.io/openstackhelm/osh-selenium:latest-ubuntu_bionic
    dep_check: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
    image_repo_sync: docker.io/docker:17.07.0
{% endif %}
{% if openstack.release == "stein" and commercial.enabled %}
images:
  tags:
    horizon: {{commercial.registry.url}}/vanillastack/horizon:ubuntu-bionic-20200903
    horizon_db_sync: {{commercial.registry.url}}/vanillastack/horizon:ubuntu-bionic-20200903
    db_init: {{commercial.registry.url}}/vanillastack/heat:stein-ubuntu_bionic
    db_drop: {{commercial.registry.url}}/vanillastack/heat:stein-ubuntu_bionic
    test: {{commercial.registry.url}}/vanillastack/osh-selenium:latest-ubuntu_bionic
    dep_check: {{commercial.registry.url}}/vanillastack/kubernetes-entrypoint:v1.0.0
    image_repo_sync: {{commercial.registry.url}}/vanillastack/docker:17.07.0
{% endif %}
{% if openstack.release == "train" and commercial.enabled != true  %}
images:
  tags:
    horizon: {{global.registry}}/vanillastack/horizon:ubuntu-bionic-20200903
    horizon_db_sync: {{global.registry}}/vanillastack/horizon:ubuntu-bionic-20200903
    db_init: docker.io/openstackhelm/heat:train-ubuntu_bionic
    db_drop: docker.io/openstackhelm/heat:train-ubuntu_bionic
    test: docker.io/openstackhelm/osh-selenium:latest-ubuntu_bionic
    dep_check: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
    image_repo_sync: docker.io/docker:17.07.0
{% endif %}
{% if openstack.release == "train" and commercial.enabled %}
images:
  tags:
    horizon: {{commercial.registry.url}}/vanillastack/horizon:ubuntu-bionic-20200903
    horizon_db_sync: {{commercial.registry.url}}/vanillastack/horizon:ubuntu-bionic-20200903
    db_init: {{commercial.registry.url}}/vanillastack/heat:train-ubuntu_bionic
    db_drop: {{commercial.registry.url}}/vanillastack/heat:train-ubuntu_bionic
    test: {{commercial.registry.url}}/vanillastack/osh-selenium:latest-ubuntu_bionic
    dep_check: {{commercial.registry.url}}/vanillastack/kubernetes-entrypoint:v1.0.0
    image_repo_sync: {{commercial.registry.url}}/vanillastack/docker:17.07.0
{% endif %}
{% if openstack.release == "ussuri" and commercial.enabled != true  %}
images:
  tags:
    horizon: {{global.registry}}/vanillastack/horizon:ubuntu-bionic-20200903
    horizon_db_sync: {{global.registry}}/vanillastack/horizon:ubuntu-bionic-20200903
    db_init: docker.io/openstackhelm/heat:ussuri-ubuntu_bionic
    db_drop: docker.io/openstackhelm/heat:ussuri-ubuntu_bionic
    test: docker.io/openstackhelm/osh-selenium:latest-ubuntu_bionic
    dep_check: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
    image_repo_sync: docker.io/docker:17.07.0
{% endif %}
{% if openstack.release == "ussuri" and commercial.enabled %}
images:
  tags:
    horizon: {{commercial.registry.url}}/vanillastack/horizon:ubuntu-bionic-20200903
    horizon_db_sync: {{commercial.registry.url}}/vanillastack/horizon:ubuntu-bionic-20200903
    db_init: {{commercial.registry.url}}/vanillastack/heat:ussuri-ubuntu_bionic
    db_drop: {{commercial.registry.url}}/vanillastack/heat:ussuri-ubuntu_bionic
    test: {{commercial.registry.url}}/vanillastack/osh-selenium:latest-ubuntu_bionic
    dep_check: {{commercial.registry.url}}/vanillastack/kubernetes-entrypoint:v1.0.0
    image_repo_sync: {{commercial.registry.url}}/vanillastack/docker:17.07.0
{% endif %}
pod:
  replicas:
    server: {{openstack.horizon.replicas}}
endpoints:
  dashboard:
    host_fqdn_override:
      public:
{% if openstack.horizon.endpoints.useDirectPublicDomain %}
        host: {{openstack.publicDomain}}
{% else %}
        host: {{openstack.horizon.endpoints.publicURLPrefix}}.{{openstack.publicDomain}}
{% endif %}
{% if openstack.tls.enabled and openstack.tls.useCertManager %}
        tls:
          key: dummy
          crt: dummy
{% if tls.issuerName == "letsencrypt-staging" %}
          ca: |
{{tls.staging.rootCACert |b64decode| indent( width=12, indentfirst=True) }}
{% elif tls.issuerName == "letsencrypt-prod" %}
          ca: |
{{tls.prod.rootCACert | b64decode | indent( width=12, indentfirst=True) }}
{% elif tls.issuerName == "certmanager-selfsigned" %}
          ca: |
{{selfSignedCA | b64decode | indent( width=12, indentfirst=True) }}
{% endif %}
{% endif %}
    scheme:
      default: http
{% if openstack.tls.enabled %}
      public: https
    port:
      api:
        public: 443
{% endif %}
{% if openstack.tls.enabled and openstack.tls.useCertManager %}
    certs:
      horizon:
        secretName: horizon-tls
        issuerRef:
          name: openstack-{{tls.issuerName}}
          kind: Issuer
{% endif %}
  identity:
    name: keystone
    auth:
{% if openstack.tls.enabled %}
      cacert: /tmp/openstack_ca.crt
{% endif %}
      admin:
        region_name: {{openstack.region}}
        username: admin
        password: {{openstack.keystone.auth.admin.password}}
        project_name: admin
        user_domain_name: default
        project_domain_name: default
  oslo_db:
    auth:
      admin:
        username: root
        password: {{openstack.mariadb.auth.admin.password}}
        secret:
          tls:
            internal: mariadb-tls-direct
      horizon:
        username: horizon
        password: {{openstack.horizon.auth.db.password}}

network:
  dashboard:
    ingress:
      public: true
      classes:
        namespace: "nginx"
        cluster: "nginx-cluster"
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
        kubernetes.io/ingress.class: nginx
{% if openstack.tls.enabled and openstack.tls.useCertManager %}
        kubernetes.io/tls-acme: "true"
#        nginx.ingress.kubernetes.io/backend-protocol: "https"
{% endif %}
{% if openstack.tls.enabled and openstack.tls.useCertManager %}
        cert-manager.io/issuer: "openstack-{{tls.issuerName}}"
{% endif %}
conf:
  horizon:
    extra_panels:
      - neutron_taas_dashboard
{% if openstack.heat.enabled %}
      - heat_dashboard
{% endif %}
{% if openstack.congress.enabled %}
      - congress_dashboard
{% endif %}
{% if openstack.designate.enabled %}
      - designatedashboard
{% endif %}
{% if openstack.mistral.enabled %}
#      - mistraldashboard
{% endif %}
{% if openstack.octavia.enabled %}
      - octavia_dashboard
{% endif %}
{% if openstack.senlin.enabled %}
      - senlin_dashboard
{% endif %}
{% if openstack.ironic.enabled %}
      - ironic_ui
{% endif %}
manifests:
  secret_ingress_tls: false
