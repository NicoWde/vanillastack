---
{% if openstack.release == "stein" and commercial.enabled != true  %}
images:
  tags:
    bootstrap: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    test: docker.io/xrally/xrally-openstack:2.0.0
    db_init: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    keystone_db_sync: docker.io/openstackhelm/keystone:stein-ubuntu_bionic
    db_drop: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    ks_user: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    rabbit_init: docker.io/rabbitmq:3.7-management
    keystone_fernet_setup: docker.io/openstackhelm/keystone:stein-ubuntu_bionic
    keystone_fernet_rotate: docker.io/openstackhelm/keystone:stein-ubuntu_bionic
    keystone_credential_setup: docker.io/openstackhelm/keystone:stein-ubuntu_bionic
    keystone_credential_rotate: docker.io/openstackhelm/keystone:stein-ubuntu_bionic
    keystone_credential_cleanup: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    keystone_api: docker.io/openstackhelm/keystone:stein-ubuntu_bionic
    keystone_domain_manage: docker.io/openstackhelm/keystone:stein-ubuntu_bionic
    dep_check: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
    image_repo_sync: docker.io/docker:17.07.0
{% endif %}
{% if openstack.release == "stein" and commercial.enabled %}
images:
  tags:
    bootstrap: {{commercial.registry.url}}/vanillastack/heat:stein-ubuntu_bionic
    test: {{commercial.registry.url}}/vanillastackxrally-openstack:2.0.0
    db_init: {{commercial.registry.url}}/vanillastack/heat:stein-ubuntu_bionic
    keystone_db_sync: {{commercial.registry.url}}/vanillastack/keystone:stein-ubuntu_bionic
    db_drop: {{commercial.registry.url}}/vanillastack/heat:stein-ubuntu_bionic
    ks_user: {{commercial.registry.url}}/vanillastack/heat:stein-ubuntu_bionic
    rabbit_init: {{commercial.registry.url}}/vanillastack/rabbitmq:3.7-management
    keystone_fernet_setup: {{commercial.registry.url}}/vanillastack/keystone:stein-ubuntu_bionic
    keystone_fernet_rotate: {{commercial.registry.url}}/vanillastack/keystone:stein-ubuntu_bionic
    keystone_credential_setup: {{commercial.registry.url}}/vanillastack/keystone:stein-ubuntu_bionic
    keystone_credential_rotate: {{commercial.registry.url}}/vanillastack/keystone:stein-ubuntu_bionic
    keystone_credential_cleanup: {{commercial.registry.url}}/vanillastack/heat:stein-ubuntu_bionic
    keystone_api: {{commercial.registry.url}}/vanillastack/keystone:stein-ubuntu_bionic
    keystone_domain_manage: {{commercial.registry.url}}/vanillastack/keystone:stein-ubuntu_bionic
    dep_check: {{commercial.registry.url}}/vanillastack/kubernetes-entrypoint:v1.0.0
    image_repo_sync: {{commercial.registry.url}}/vanillastack/docker:17.07.0
{% endif %}
{% if openstack.release == "train" and commercial.enabled != true  %}
images:
  tags:
    bootstrap: docker.io/openstackhelm/heat:train-ubuntu_bionic
    test: docker.io/xrally/xrally-openstack:2.0.0
    db_init: docker.io/openstackhelm/heat:train-ubuntu_bionic
    keystone_db_sync: docker.io/openstackhelm/keystone:train-ubuntu_bionic
    db_drop: docker.io/openstackhelm/heat:train-ubuntu_bionic
    ks_user: docker.io/openstackhelm/heat:train-ubuntu_bionic
    rabbit_init: docker.io/rabbitmq:3.7-management
    keystone_fernet_setup: docker.io/openstackhelm/keystone:train-ubuntu_bionic
    keystone_fernet_rotate: docker.io/openstackhelm/keystone:train-ubuntu_bionic
    keystone_credential_setup: docker.io/openstackhelm/keystone:train-ubuntu_bionic
    keystone_credential_rotate: docker.io/openstackhelm/keystone:train-ubuntu_bionic
    keystone_credential_cleanup: docker.io/openstackhelm/heat:train-ubuntu_bionic
    keystone_api: docker.io/openstackhelm/keystone:train-ubuntu_bionic
    keystone_domain_manage: docker.io/openstackhelm/keystone:train-ubuntu_bionic
    dep_check: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
    image_repo_sync: docker.io/docker:17.07.0
{% endif %}
{% if openstack.release == "train" and commercial.enabled %}
images:
  tags:
    bootstrap: {{commercial.registry.url}}/vanillastack/heat:train-ubuntu_bionic
    test: {{commercial.registry.url}}/vanillastack/xrally-openstack:2.0.0
    db_init: {{commercial.registry.url}}/vanillastack/heat:train-ubuntu_bionic
    keystone_db_sync: {{commercial.registry.url}}/vanillastack/keystone:train-ubuntu_bionic
    db_drop: {{commercial.registry.url}}/vanillastack/heat:train-ubuntu_bionic
    ks_user: {{commercial.registry.url}}/vanillastack/heat:train-ubuntu_bionic
    rabbit_init: {{commercial.registry.url}}/vanillastack/rabbitmq:3.7-management
    keystone_fernet_setup: {{commercial.registry.url}}/vanillastack/keystone:train-ubuntu_bionic
    keystone_fernet_rotate: {{commercial.registry.url}}/vanillastack/keystone:train-ubuntu_bionic
    keystone_credential_setup: {{commercial.registry.url}}/vanillastack/keystone:train-ubuntu_bionic
    keystone_credential_rotate: {{commercial.registry.url}}/vanillastack/keystone:train-ubuntu_bionic
    keystone_credential_cleanup: {{commercial.registry.url}}/vanillastack/heat:train-ubuntu_bionic
    keystone_api: {{commercial.registry.url}}/vanillastack/keystone:train-ubuntu_bionic
    keystone_domain_manage: {{commercial.registry.url}}/vanillastack/keystone:train-ubuntu_bionic
    dep_check: {{commercial.registry.url}}/vanillastack/kubernetes-entrypoint:v1.0.0
    image_repo_sync: {{commercial.registry.url}}/vanillastack/docker:17.07.0
{% endif %}
{% if openstack.release == "ussuri" and commercial.enabled != true  %}
images:
  tags:
    bootstrap: docker.io/openstackhelm/heat:ussuri-ubuntu_bionic
    test: docker.io/xrally/xrally-openstack:2.0.0
    db_init: docker.io/openstackhelm/heat:ussuri-ubuntu_bionic
    keystone_db_sync: docker.io/openstackhelm/keystone:ussuri-ubuntu_bionic
    db_drop: docker.io/openstackhelm/heat:ussuri-ubuntu_bionic
    ks_user: docker.io/openstackhelm/heat:ussuri-ubuntu_bionic
    rabbit_init: docker.io/rabbitmq:3.7-management
    keystone_fernet_setup: docker.io/openstackhelm/keystone:ussuri-ubuntu_bionic
    keystone_fernet_rotate: docker.io/openstackhelm/keystone:ussuri-ubuntu_bionic
    keystone_credential_setup: docker.io/openstackhelm/keystone:ussuri-ubuntu_bionic
    keystone_credential_rotate: docker.io/openstackhelm/keystone:ussuri-ubuntu_bionic
    keystone_credential_cleanup: docker.io/openstackhelm/heat:ussuri-ubuntu_bionic
    keystone_api: docker.io/openstackhelm/keystone:ussuri-ubuntu_bionic
    keystone_domain_manage: docker.io/openstackhelm/keystone:ussuri-ubuntu_bionic
    dep_check: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
    image_repo_sync: docker.io/docker:17.07.0
{% endif %}
{% if openstack.release == "ussuri" and commercial.enabled %}
images:
  tags:
    bootstrap: {{commercial.registry.url}}/vanillastack/heat:ussuri-ubuntu_bionic
    test: {{commercial.registry.url}}/vanillastack/xrally-openstack:2.0.0
    db_init: {{commercial.registry.url}}/vanillastack/heat:ussuri-ubuntu_bionic
    keystone_db_sync: {{commercial.registry.url}}/vanillastack/keystone:ussuri-ubuntu_bionic
    db_drop: {{commercial.registry.url}}/vanillastack/heat:ussuri-ubuntu_bionic
    ks_user: {{commercial.registry.url}}/vanillastack/heat:ussuri-ubuntu_bionic
    rabbit_init: {{commercial.registry.url}}/vanillastack/rabbitmq:3.7-management
    keystone_fernet_setup: {{commercial.registry.url}}/vanillastack/keystone:ussuri-ubuntu_bionic
    keystone_fernet_rotate: {{commercial.registry.url}}/vanillastack/keystone:ussuri-ubuntu_bionic
    keystone_credential_setup: {{commercial.registry.url}}/vanillastack/keystone:ussuri-ubuntu_bionic
    keystone_credential_rotate: {{commercial.registry.url}}/vanillastack/keystone:ussuri-ubuntu_bionic
    keystone_credential_cleanup: {{commercial.registry.url}}/vanillastack/heat:ussuri-ubuntu_bionic
    keystone_api: {{commercial.registry.url}}/vanillastack/keystone:ussuri-ubuntu_bionic
    keystone_domain_manage: {{commercial.registry.url}}/vanillastack/keystone:ussuri-ubuntu_bionic
    dep_check: {{commercial.registry.url}}/vanillastack/kubernetes-entrypoint:v1.0.0
    image_repo_sync: {{commercial.registry.url}}/vanillastack/docker:17.07.0
{% endif %}

pod:
  replicas:
    api: {{openstack.keystone.api.replicas}}
endpoints:
  identity:
    host_fqdn_override:
      public:
        host: {{openstack.keystone.endpoints.publicURLPrefix}}.{{openstack.publicDomain}}
{% if openstack.tls.enabled and openstack.tls.useCertManager %}
        tls:
          key: dummy
          crt: dummy
{% if tls.issuerName == "letsencrypt-staging" %}
          ca: |
{{tls.staging.rootCACert |b64decode| indent( width=12, indentfirst=True) }}
{% elif tls.issuerName == "letsencrypt-prod" %}
          ca: |
{{tls.prod.rootCACert | b64decode | indent( width=12, indentfirst=True) }}
{% elif tls.issuerName == "certmanager-selfsigned" %}
          ca: |
{{selfSignedCA | b64decode | indent( width=12, indentfirst=True) }}
{% endif %}
{% endif %}
    scheme:
      default: http
{% if openstack.tls.enabled %}
      public: https
    port:
      api:
        public: 443
{% endif %}
{% if openstack.tls.enabled and openstack.tls.useCertManager %}
    certs:
      keystone:
        secretName: keystone-tls
        issuerRef:
          name: openstack-{{tls.issuerName}}
          kind: Issuer
{% endif %}
    auth:
{% if openstack.tls.enabled %}
      cacert: /tmp/openstack_ca.crt
{% endif %}
      admin:
        password: {{openstack.keystone.auth.admin.password}}
        region: {{openstack.region}}
      keystone-test:
        password: {{openstack.keystone.auth.keystoneTest.password}}
        region: {{openstack.region}}
  oslo_db:
    auth:
      admin:
        username: root
        password: {{openstack.mariadb.auth.admin.password}}
        secret:
          tls:
            internal: mariadb-tls-direct
      keystone:
        username: keystone
        password: {{openstack.keystone.auth.db.password}}
  oslo_messaging:
    auth:
      admin:
        username: rabbitmq
        password: {{openstack.rabbitmq.auth.admin.password}}
      keystone:
        username: keystone
        password: {{openstack.keystone.auth.messaging.password}}
network:
  api:
    ingress:
      public: true
      classes:
        namespace: "nginx"
        cluster: "nginx-cluster"
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
        kubernetes.io/ingress.class: nginx
{% if openstack.tls.enabled and openstack.tls.useCertManager %}
        kubernetes.io/tls-acme: "true"
#        nginx.ingress.kubernetes.io/backend-protocol: "https"
{% endif %}
{% if openstack.tls.enabled and openstack.tls.useCertManager %}
        cert-manager.io/issuer: "openstack-{{tls.issuerName}}"
{% endif %}
manifests:
  secret_ingress_tls: false
#  service_ingress_api: false
#  service_api: false
